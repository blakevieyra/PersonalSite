(()=>{"use strict";class e{constructor(e,{wins:t=0,losses:s=0,ties:r=0,performance:i=0}){this.username=e,this.wins=t,this.losses=s,this.ties=r,this.performance=i}incrementWins(){this.wins++}incrementLosses(){this.losses++}incrementTies(){this.ties++}}class t{constructor(e){this.player=e,this.guessesLeft=6,this.lettersGuessed=[],this.correctGuesses=[],this.words={easy:[{word:"cat",hint:"A small domesticated carnivorous mammal with soft fur"},{word:"dog",hint:"A domesticated carnivorous mammal with four legs and a tail"},{word:"house",hint:"A building for human habitation"}],medium:[{word:"computer",hint:"An electronic device for processing data"}],hard:[{word:"perplexity",hint:"State of being bewildered or puzzled"}]},this.selectedWord=null,this.chartId="hangmanChart",this.chart=null,this.difficulty="easy",this.init(this.difficulty)}init(e){this.setDifficulty(e),this.resetGame(),this.setupChart(),this.attachEventListeners()}setDifficulty(e){this.difficulty=e,this.guessesLeft={easy:{guessesLeft:10},medium:{guessesLeft:7},hard:{guessesLeft:5}}[e].guessesLeft}selectRandomWord(){const e=this.words[this.difficulty];return e[Math.floor(Math.random()*e.length)]}resetGame(){this.selectedWord=this.selectRandomWord(),this.lettersGuessed=[],this.correctGuesses=[],this.updateWordDisplay(),this.updateScoreboard()}guessLetter(e){/[a-z]/i.test(e)&&!this.lettersGuessed.includes(e)?(this.lettersGuessed.push(e),this.selectedWord.word.includes(e)?(this.correctGuesses.push(e),this.isWordComplete()&&(this.player.updateStats({wins:this.player.wins+1}),alert("Congratulations! You guessed the word: "+this.selectedWord.word),this.resetGame())):(this.guessesLeft--,0===this.guessesLeft&&(this.player.updateStats({losses:this.player.losses+1}),alert("Game Over! The word was: "+this.selectedWord.word),this.resetGame())),this.updateWordDisplay(),this.updateScoreboard()):alert("Invalid guess or already guessed that letter.")}isWordComplete(){return this.selectedWord.word.split("").every((e=>this.correctGuesses.includes(e)))}updateWordDisplay(){let e=this.selectedWord.word.split("").map((e=>this.correctGuesses.includes(e)?e:"_")).join(" ");document.getElementById("wordDisplay").textContent=e,document.getElementById("guessesLeft").textContent=this.guessesLeft,document.getElementById("lettersGuessed").textContent=this.lettersGuessed.join(", "),document.getElementById("hintText").textContent=this.selectedWord.hint}updateScoreboard(){document.getElementById("hangmanWins").textContent=this.player.wins,document.getElementById("hangmanLosses").textContent=this.player.losses,this.updateChart()}setupChart(){const e=document.getElementById(this.chartId).getContext("2d");this.chart&&this.chart.destroy(),this.chart=new Chart(e,{type:"bar",data:{labels:["Wins","Losses"],datasets:[{label:"Hangman Statistics",data:[this.player.wins,this.player.losses],backgroundColor:["rgba(255, 99, 132, 0.2)","rgba(54, 162, 235, 0.2)"],borderColor:["rgba(255, 99, 132, 1)","rgba(54, 162, 235, 1)"],borderWidth:1}]},options:{scales:{y:{beginAtZero:!0}}}})}attachEventListeners(){this.guessButton=document.getElementById("guessButton"),this.guessButton.addEventListener("click",(()=>{const e=document.getElementById("letterInput").value.toLowerCase();document.getElementById("letterInput").value="",this.guessLetter(e)}))}}class s{constructor(e){this.player=e,this.cells=document.querySelectorAll("#ticTacToeBoard button"),this.chart=null,this.chartId="ticTacToeChart",this.gameOver=!1,this.currentPlayer="X",this.gameBoard=Array(9).fill("")}init(){this.setupBoard(),this.setupChart(),this.updateScoreboard(),"O"===this.currentPlayer&&setTimeout((()=>this.computerMove()),1e3)}resetGame(){console.log("Resetting game..."),this.currentPlayer="X",this.gameBoard.fill(""),this.cells.forEach((e=>e.textContent="")),this.gameOver=!1,document.getElementById("ticTacToeResult").textContent="",this.setupBoard()}playerMove(e){this.gameOver||""!==this.gameBoard[e]||(this.gameBoard[e]=this.currentPlayer,this.cells[e].textContent=this.currentPlayer,this.checkWinner(this.currentPlayer)?this.handleGameEnd(this.currentPlayer):this.gameBoard.includes("")?(this.switchPlayer(),"O"===this.currentPlayer&&setTimeout((()=>this.computerMove()),1e3)):this.handleGameEnd("tie"))}computerMove(){if(!this.gameOver){let e=this.gameBoard.reduce(((e,t,s)=>(""===t&&e.push(s),e)),[]);if(e.length>0){let t=e[Math.floor(Math.random()*e.length)];this.gameBoard[t]=this.currentPlayer,this.cells[t].textContent=this.currentPlayer,this.checkWinner(this.currentPlayer)?this.handleGameEnd(this.currentPlayer):this.gameBoard.includes("")?this.switchPlayer():this.handleGameEnd("tie")}}}switchPlayer(){this.currentPlayer="X"===this.currentPlayer?"O":"X"}checkWinner(e){return[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]].some((t=>t.every((t=>this.gameBoard[t]===e))))}handleGameEnd(e){"X"===e?(this.player.updateStats({wins:this.player.wins+1}),document.getElementById("ticTacToeResult").textContent="You win!"):"O"===e?(this.player.updateStats({losses:this.player.losses+1}),document.getElementById("ticTacToeResult").textContent="Computer wins!"):(this.player.updateStats({ties:this.player.ties+1}),document.getElementById("ticTacToeResult").textContent="It's a tie!"),this.updateScoreboard(),this.gameOver=!0}setupChart(){const e=document.getElementById(this.chartId).getContext("2d");this.chart&&this.chart.destroy(),this.chart=new Chart(e,{type:"bar",data:{labels:["Wins","Losses","Ties"],datasets:[{label:"Tic Tac Toe Statistics",data:[this.player.wins,this.player.losses,this.player.ties],backgroundColor:["rgba(255, 99, 132, 0.2)","rgba(54, 162, 235, 0.2)","rgba(255, 206, 86, 0.2)"],borderColor:["rgba(255, 99, 132, 1)","rgba(54, 162, 235, 1)","rgba(255, 206, 86, 1)"],borderWidth:1}]},options:{scales:{y:{beginAtZero:!0}}}})}updateScoreboard(){document.getElementById("playerWins").textContent=this.player.wins,document.getElementById("computerWins").textContent=this.player.losses,document.getElementById("ties").textContent=this.player.ties,this.updateChart()}updateChart(){this.chart&&(this.chart.data.datasets[0].data=[this.player.wins,this.player.losses,this.player.ties],this.chart.update())}setupBoard(){const e=document.getElementById("ticTacToeBoard");e.removeEventListener("click",this.handleBoardClick),this.handleBoardClick=this.handleBoardClick.bind(this),e.addEventListener("click",this.handleBoardClick)}handleBoardClick(e){if("BUTTON"===e.target.tagName){const t=Array.from(this.cells).indexOf(e.target);-1!==t&&this.playerMove(t)}}}class r{constructor(e){this.player=e,this.buttons=document.querySelectorAll("#rpsButtons button"),this.chart=null,this.chartId="rpsChart"}init(){this.setupEventListeners(),this.setupChart()}setupEventListeners(){this.buttons.forEach((e=>{e.addEventListener("click",(()=>{const t=e.getAttribute("data-choice");this.playerChoice(t)}))}))}playerChoice(e){const t=["rock","paper","scissors"],s=t[Math.floor(Math.random()*t.length)],r=this.determineWinner(e,s);this.updatePlayerStats(r),this.displayResult(r,e,s)}determineWinner(e,t){return e===t?"tie":"rock"===e&&"scissors"===t||"paper"===e&&"rock"===t||"scissors"===e&&"paper"===t?"win":"lose"}updatePlayerStats(e){"win"===e?this.player.incrementWins():"lose"===e?this.player.incrementLosses():this.player.incrementTies(),this.updateScoreboard(),this.updateChart()}updateScoreboard(){document.getElementById("rpsWins").textContent=this.player.wins,document.getElementById("rpsLosses").textContent=this.player.losses,document.getElementById("rpsTies").textContent=this.player.ties}displayResult(e,t,s){const r=document.getElementById("userChoiceImg"),i=document.getElementById("computerChoiceImg");r.src=`images/${t}.png`,i.src=`images/${s}.png`,r.style.display="inline-block",i.style.display="inline-block",document.getElementById("result").innerHTML=`${this.capitalizeFirstLetter(e)}!<br>You chose ${t}. Computer chose ${s}.`}capitalizeFirstLetter(e){return e.charAt(0).toUpperCase()+e.slice(1)}setupChart(){const e=document.getElementById(this.chartId).getContext("2d");this.chart=new Chart(e,{type:"bar",data:{labels:["Wins","Losses","Ties"],datasets:[{label:"Rock, Paper, Scissors Statistics",data:[this.player.wins,this.player.losses,this.player.ties],backgroundColor:["rgba(255, 99, 132, 0.2)","rgba(54, 162, 235, 0.2)","rgba(255, 206, 86, 0.2)"],borderColor:["rgba(255, 99, 132, 1)","rgba(54, 162, 235, 1)","rgba(255, 206, 86, 1)"],borderWidth:1}]},options:{scales:{y:{beginAtZero:!0}}}})}updateChart(){this.chart&&(this.chart.data.datasets.forEach((e=>{e.data=[this.player.wins,this.player.losses,this.player.ties]})),this.chart.update())}}async function i(t){t.preventDefault();const s=document.getElementById("registerUsername").value.trim(),r=document.getElementById("registerPassword").value.trim();if(s&&r)try{const i=await fetch("/register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:s,password:r})});if(!i.ok){const e=await i.json();throw new Error(e.error||"Registration failed")}{const r=await i.json(),a=new e(s,r);console.log(`Registration successful for ${a.username}`),sessionStorage.setItem("currentPlayer",JSON.stringify(a)),alert("Registration successful!"),t.target.reset(),n(),d(a),o(),l()}}catch(e){console.error("Error registering user:",e),alert("An error occurred while registering. Please try again.")}else alert("Please enter both a username and a password.")}async function n(){try{const e=await fetch("/leaderboard");if(!e.ok)throw new Error("Failed to load players");let t=await e.json();t.sort(((e,t)=>t.performance-e.performance));const s=document.querySelector("#leaderboard tbody");s.innerHTML="",t.forEach((e=>{const t=document.createElement("tr");t.innerHTML=`\n                <td>${e.name}</td>\n                <td>${e.performance}</td>\n                <td>${e.wins}</td>\n                <td>${e.losses}</td>\n                <td>${e.ties}</td>\n            `,s.appendChild(t)}))}catch(e){console.error("Error loading players:",e)}}function a(){document.querySelectorAll(".fade-in").forEach((e=>{(function(e){const t=e.getBoundingClientRect();return t.top>=0&&t.left>=0&&t.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&t.right<=(window.innerWidth||document.documentElement.clientWidth)})(e)&&e.classList.add("visible")}))}function o(){document.getElementById("playerForm").style.display="none"}function l(){document.getElementById("registerForm").style.display="none"}function d(e){new t(e).init("easy"),new s(e).init(),new r(e).init()}document.addEventListener("DOMContentLoaded",(function(){!function(){const e=document.getElementById("registerForm");e?.addEventListener("submit",i);const t=document.getElementById("loginForm");t?.addEventListener("submit",handlePlayerSubmit)}(),a(),window.addEventListener("scroll",a)})),document.getElementById("loginForm").addEventListener("submit",(async function(t){t.preventDefault();const s=document.getElementById("loginUsername").value.trim(),r=document.getElementById("loginPassword").value.trim();if(s&&r)try{const i=await fetch("/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:s,password:r})});if(!i.ok){const e=await i.json();throw new Error(e.error||"Login failed")}{const r=await i.json(),a=new e(s,r);console.log(`Login successful for ${a.username}`),sessionStorage.setItem("currentPlayer",JSON.stringify(a)),alert("Login successful!"),t.target.reset(),n(),d(a),o(),l()}}catch(e){console.error("Error logging in user:",e),alert("An error occurred while logging in. Please try again.")}else alert("Please enter both a username and a password.")})),document.getElementById("registerForm").addEventListener("submit",i)})();